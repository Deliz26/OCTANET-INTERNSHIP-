class ATM:
    def __init__(self):
        # Initialize the ATM with default values
        self.balance = 1000.0  # Default account balance
        self.pin = "1234"  # Default PIN
        self.transaction_history = []  # List to store transaction history

    def display_balance(self):
        # Display the current account balance
        print(f"\n{'='*40}")
        print(f"{'Account Balance Inquiry':^40}")
        print(f"{'='*40}")
        print(f"{'Current Balance:':<25} ${self.balance:.2f}")
        print(f"{'='*40}")

    def withdraw_cash(self, amount):
        # Withdraw cash from the account if sufficient balance is available
        if amount <= self.balance:
            self.balance -= amount
            self.transaction_history.append(f"Withdrawn: ${amount:.2f}")
            print(f"\n{'='*40}")
            print(f"{'Cash Withdrawal':^40}")
            print(f"{'='*40}")
            print(f"{'Successfully withdrawn:':<25} ${amount:.2f}")
            print(f"{'New Balance:':<25} ${self.balance:.2f}")
            print(f"{'='*40}")
        else:
            print(f"\n{'='*40}")
            print(f"{'Cash Withdrawal':^40}")
            print(f"{'='*40}")
            print("Insufficient funds for this withdrawal.")
            print(f"{'='*40}")

    def deposit_cash(self, amount):
        # Deposit cash into the account
        self.balance += amount
        self.transaction_history.append(f"Deposited: ${amount:.2f}")
        print(f"\n{'='*40}")
        print(f"{'Cash Deposit':^40}")
        print(f"{'='*40}")
        print(f"{'Successfully deposited:':<25} ${amount:.2f}")
        print(f"{'New Balance:':<25} ${self.balance:.2f}")
        print(f"{'='*40}")

    def change_pin(self, new_pin):
        # Change the current PIN to a new PIN
        self.pin = new_pin
        print(f"\n{'='*40}")
        print(f"{'PIN Change':^40}")
        print(f"{'='*40}")
        print("PIN successfully changed.")
        print(f"{'='*40}")

    def transaction_history_display(self):
        # Display the transaction history
        print(f"\n{'='*40}")
        print(f"{'Transaction History':^40}")
        print(f"{'='*40}")
        if not self.transaction_history:
            print(f"{'No transactions made yet.':<40}")
        else:
            for transaction in self.transaction_history:
                print(f"{transaction:<40}")
        print(f"{'='*40}")

def main():
    atm = ATM()  # Create an instance of the ATM class
    while True:
        print("\nWelcome to the ATM")
        print("1. Account Balance Inquiry")
        print("2. Cash Withdrawal")
        print("3. Cash Deposit")
        print("4. Change PIN")
        print("5. Transaction History")
        print("6. Exit")
        
        choice = input("Please select an option (1-6): ")
        
        if choice == '1':
            atm.display_balance()
        elif choice == '2':
            amount = float(input("Enter amount to withdraw: $"))
            atm.withdraw_cash(amount)
        elif choice == '3':
            amount = float(input("Enter amount to deposit: $"))
            atm.deposit_cash(amount)
        elif choice == '4':
            old_pin = input("Enter current PIN: ")
            new_pin = input("Enter new PIN: ")
            atm.change_pin(new_pin)
        elif choice == '5':
            atm.transaction_history_display()
        elif choice == '6':
            print("Thank you for using the ATM. Goodbye!")
            break
        else:
            print("Invalid option. Please try again.")

if __name__ == "__main__":
    main()
